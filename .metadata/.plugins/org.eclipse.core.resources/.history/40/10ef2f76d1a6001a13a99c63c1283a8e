package com.kh.array;

public class A_Array {
	
	// 배열 : 같은 자료형의 값들을 하나의 공간에 담을 수 있는 개년
	// 		저장된 값마다 인덱스가 지정됨 (인덱스는 0부터 시작됨)
	
	public void method1() {
		// 배열을 왜 쓰는지
		int num1 = 0;
		int num2 = 1;
		int num3 = 2;			// 같은 자료형이기 때문에 어떤 한공간에 너어두면 어떨까? 그래서 배열 사용
		int num4 = 4;
		int num5 = 5;
		
		//출력하고자 할때도
		/*System.out.println(num1);
		System.out.println(num2);
		System.out.println(num3);*/
		
		// 총 합계를 구하고자 할 때됴
		int sum = num1 + num2 + num3;
		
		/*
		 * 1.배열 선언(여러개의 값들을 보관할 배열을 만들겠다!!)
		 * 	 자료형 배열명[];
		 *	자료형[] 배열명;		// 쌤 선호 스타일
		 *
		 *
		 * 
		 */
		
		int a; 	// 단순한 변수 선언
		
		//int arr[];
		//int[] arr;
		
		/*
		 * 2.배열 할당(이 배열에 몇 개의 값들을 보관할건지 크기 지정하는 과정, 그 갯수만큼 방이 만들어짐)
		 * 	 배열명 = new 자료형[배열크기];
		 * 
		 */
		
		//arr = new int[5];
		
		// * 배열 선언과 동시에 할당 (배열 만듬과 동시에 크기 지정하겠다.)
		int a = 10;
		
		int[] arr = new int[5];
		
		/*
		 * 3. 값 초기화(대입)
		 * 	  배열명[인덱스] = 값;
		 * 
		 * 
		 */
		
		/*arr[0] = 0;
		arr[1] = 1;
		arr[2] = 2;*/
		
		// 배열 장점 : 반복문을 사용할 수 있다는 장점
		//for(int i=0; i<=4; i++) {		// 0에서 부터 4까지 1씩 증가하는 동안 반복이 수행되게끔
		for(int i=0; i<=arr.length-1; i++) {	// 배열의 길이 : 배열명.length
			arr[i] = i;
			
		}
		/*
		System.out.println(arr[0]);
		System.out.println(arr[1]);
		System.out.println(arr[2]);
		System.out.println(arr[3]);
		System.out.println(arr[4]);*/
		
		// 출력문 또한 반복문으로
		for(int i=0; i<=arr.length-1;i++) {
			System.out.println(arr[i]);
		}
		
		
	}

}
